<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bad8</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_baddie_pointPlayer</parentName>
  <maskName>spr_enemyMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maxHealth = 44
moveSpeed = 5.1
grid = global.grid
range = 200
attackReload = sec * 3
attackTimer = 0

big = 0

color = "w"
//if irandom(7 - global.level) = 0
    //color = choose("r", "b", "y", "g")
    
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

image_index = 0
if currentHealth != maxHealth
    image_index = 1
if currentHealth / maxHealth &lt; 0.51
    image_index = 2
if currentHealth / maxHealth &lt; 0.26
    image_index = 3
        
if image_index != 0
{
    switch(global.enemyDiff)
    {
        case 1: attackReload = sec * 2.0; moveSpeed = 3.4; bulletSpeed = 5 break;
        case 2: attackReload = sec * 1.5; moveSpeed = 3.7; bulletSpeed = 5  break;
        case 3: attackReload = sec * 1.0; moveSpeed = 4.5; bulletSpeed = 5  break;
        case 4: attackReload = sec * 0.85; moveSpeed = 4.8; bulletSpeed = 5  break;
        case 5: attackReload = sec * 0.7; moveSpeed = 5.1; bulletSpeed = 5  break;
    }
}
else
{
    switch(global.enemyDiff)
    {
        case 1: attackReload = sec * 4.0; moveSpeed = 2; bulletSpeed = 2 break;
        case 2: attackReload = sec * 4.0; moveSpeed = 2; bulletSpeed = 2  break;
        case 3: attackReload = sec * 3.0; moveSpeed = 2.5; bulletSpeed = 2  break;
        case 4: attackReload = sec * 2.7; moveSpeed = 2.7; bulletSpeed = 2 break;
        case 5: attackReload = sec * 2.3; moveSpeed = 3; bulletSpeed = 2 break;
    }
}

if attackTimer &gt; 0 and blueSlow &lt;= 0
    attackTimer -= 1
    
if attackTimer = 0
{
    angle = -10
    repeat(3)
    {
        playerID = instance_nearest(x, y, obj_player_parent)
        
        if (angle != 20) or (angle = 20 and image_index != 0)
        with instance_create(x, y, obj_bad6_bullet)
        {
            direction = point_direction(x, y, other.playerID.x, other.playerID.y) + other.angle
            speed = other.bulletSpeed
        }
        angle += 10
    }
    attackTimer = attackReload
}

if attackTimer &gt; attackReload
    attackTimer = attackReload
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
