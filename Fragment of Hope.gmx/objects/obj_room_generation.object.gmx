<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*global.grid = mp_grid_create(0, 0, room_width/54, room_height/54, 54, 54)
global.gridFly = mp_grid_create(0, 0, room_width/54, room_height/54, 54, 54)
mp_grid_add_instances(global.grid, obj_solid, false)
mp_grid_add_instances(global.gridFly, obj_wall, true)*/
spawnerOn = 0
fight = 0
listBadPoint = ds_list_create()
listBadSpawner = ds_list_create()
totalBad = 1

dy = 0
repeat(20)
{
    dx = 0
    repeat(36)
    {
        instance_create(x + dx, y + dy, obj_dirt)
        dx += 54  
    }
    dy += 54
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(listBadPoint)
ds_list_destroy(listBadSpawner)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if spawnerOn = 1
    fight_step()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if spawnerOn = 1
{
    /*draw_set_halign(fa_center)
    draw_set_halign(fa_middle)
    draw_set_color(c_white)
    draw_set_font(font0)
    draw_text(x + 108, y + 510, "Kills Left:")
    draw_text(x + 108, y + 550, string(totalBad))*/
    
    if totalBad &gt; 0
        draw_sprite(spr_killCount, 0, x + 108, y + 540)
    else
        draw_sprite(spr_killCount, 1, x + 108, y + 540)
    
    //Base
    cX = 0
    repeat(clamp(charges, 1, 5))
    {
        draw_sprite(spr_killCount, 2, x + 108 + cX, y + 540)
        cX += 27
    }
    
    cX = 0
    repeat(clamp(charges - 5, 0, 5))
    {
        draw_sprite(spr_killCount, 2, x + 108 + cX, y + 560)
        cX += 27
    }
    
    cX = 0
    repeat(clamp(charges - 10, 0, 5))
    {
        draw_sprite(spr_killCount, 2, x + 108 + cX, y + 580)
        cX += 27
    }
    
    cX = 0
    repeat(clamp(charges - 15, 0, 5))
    {
        draw_sprite(spr_killCount, 2, x + 108 + cX, y + 600)
        cX += 27
    }
    
    //Charges
    cX = 0
    repeat(clamp(charges - totalBad, 0, 5))
    {
        draw_sprite(spr_killCount, 3, x + 108 + cX, y + 540)
        cX += 27
    }
    
    cX = 0
    repeat(clamp(charges - totalBad - 5, 0, 5))
    {
        draw_sprite(spr_killCount, 3, x + 108 + cX, y + 560)
        cX += 27
    }
    
    cX = 0
    repeat(clamp(charges - totalBad - 10, 0, 5))
    {
        draw_sprite(spr_killCount, 3, x + 108 + cX, y + 580)
        cX += 27
    }
    
    cX = 0
    repeat(clamp(charges - totalBad - 15, 0, 5))
    {
        draw_sprite(spr_killCount, 3, x + 108 + cX, y + 600)
        cX += 27
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
