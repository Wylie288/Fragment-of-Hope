<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.keys = 0
global.arenaLock = 0
global.coins = 0
global.enemySlow = 0
global.fight = 0
global.generation = 1

audio_master_gain(0.8);

if global.gameMode = "coop"
    audio_play_sound(ambient,10,1)
else
    audio_play_sound(battle,10,1)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.coinRate = 1
if global.mp = 1
    global.coinRate = 1.5

global.healthOrbs = 0
global.spawnTime = 3
global.discount = 0
global.barrelDamage = 30

seconds = -1
minutes = -1
timeEnd = 0

//Ammo Max
if global.difficulty = "casual"
{
    global.greenAmmoMax = 10
    global.blueAmmoMax = 50
    global.yellowAmmoMax = 15
    global.redAmmoMax = 12
    
    if global.mp = 0
        global.restockTime = sec * 4
    else
        global.restockTime = sec * 3
        
    global.healthOrbs = 2
}
else if global.difficulty = "experianced"
{
    global.greenAmmoMax = 8
    global.blueAmmoMax = 40
    global.yellowAmmoMax = 10
    global.redAmmoMax = 8
    
    if global.mp = 0
        global.restockTime = sec * 5
    else
        global.restockTime = sec * 3.5
        
    global.healthOrbs = 1
}
else if global.difficulty = "standard"
{
    global.greenAmmoMax = 6
    global.blueAmmoMax = 30
    global.yellowAmmoMax = 9
    global.redAmmoMax = 7
    
    if global.mp = 0
        global.restockTime = sec * 12
    else
        global.restockTime = sec * 4
}
else
{
    global.greenAmmoMax = 4
    global.blueAmmoMax = 25
    global.yellowAmmoMax = 7
    global.redAmmoMax = 5
    
    if global.mp = 0
        global.restockTime = sec * 6
    else
        global.restockTime = sec * 4
}

if global.hardcore = 0
    global.restockTime = 0.5 * sec

global.greenAmmoStart = global.greenAmmoMax
global.blueAmmoStart = global.blueAmmoMax
global.yellowAmmoStart = global.yellowAmmoMax
global.redAmmoStart = global.redAmmoMax
global.healthOrbsStart = global.healthOrbs
global.barrelDamageStart = global.barrelDamage
global.restockTimeStart = global.restockTime

if global.gameMode = "pvp"
{
    playerList = ds_list_create()
    ds_list_add(playerList, obj_player1)
    ds_list_add(playerList, obj_player2)
    ds_list_shuffle(playerList)
    
    with obj_mp_spawn
    {
        player = ds_list_find_value(other.playerList, 0)
        ds_list_delete(other.playerList, 0)
        
        instance_create(x, y, player)
    }
    
    ds_list_destroy(playerList)

    instance_create(0, 0, obj_pvp_countdown)
    global.spawnTime = sec * 4
    
    p1Time = 0
    p2Time = 0
    p1Score = 0
    p2Score = 0
    
    minutes = 0
    seconds = 0
    timeEnd = 4
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Loot
global.normalLoot = ds_list_create()
global.weaponLoot = ds_list_create()
global.majorLoot = ds_list_create()
global.minorLoot = ds_list_create()
global.normalLootI = 0
global.weaponLootI = 0
tempList = ds_list_create()

//Health
if global.difficulty != "master"
{
    ds_list_add(tempList, "Health Max")
    ds_list_add(tempList, "Health")
    ds_list_add(tempList, "Health Orb")
    ds_list_shuffle(tempList)
    ds_list_add(global.normalLoot, ds_list_find_value(tempList, 0))
    ds_list_add(global.normalLoot, ds_list_find_value(tempList, 1))
    ds_list_add(global.normalLoot, ds_list_find_value(tempList, 2))
    ds_list_clear(tempList)
}

//Shield
if global.difficulty != "master"
{
    ds_list_add(tempList, "Shield Fill")
    ds_list_add(tempList, "Shield Add")
    ds_list_add(tempList, "Damage Resist")
    ds_list_shuffle(tempList)
    ds_list_add(global.normalLoot, ds_list_find_value(tempList, 0))
    ds_list_add(global.normalLoot, ds_list_find_value(tempList, 1))
    ds_list_clear(tempList)
}
else
{
    ds_list_add(tempList, "Damage Resist")
    ds_list_add(global.normalLoot, ds_list_find_value(tempList, 0))
    ds_list_clear(tempList)
}

//Aux
ds_list_add(tempList, "Move Speed")
ds_list_add(tempList, "Respawn Time")
ds_list_add(tempList, "Barrels")
ds_list_shuffle(tempList)
ds_list_add(global.normalLoot, ds_list_find_value(tempList, 0))
ds_list_add(global.normalLoot, ds_list_find_value(tempList, 1))
ds_list_add(global.normalLoot, ds_list_find_value(tempList, 2))
ds_list_clear(tempList)

//Discount
ds_list_add(tempList, "Coin Rate")
ds_list_add(tempList, "Discount")
ds_list_shuffle(tempList)
ds_list_add(global.normalLoot, ds_list_find_value(tempList, 0))
if global.difficulty = "master"
    ds_list_add(global.normalLoot, ds_list_find_value(tempList, 1)) 
ds_list_clear(tempList)

//Weapon Setup
red = 1
green = 1
blue = 1
yellow = 1
if global.difficulty != "master"
{
    ds_list_add(tempList, "red")
    ds_list_add(tempList, "green")
    ds_list_add(tempList, "blue")
    ds_list_add(tempList, "yellow")
    ds_list_shuffle(tempList)
    switch (ds_list_find_value(tempList, 0))
    {
        case "red": red = 0; break;
        case "green": green = 0; break;
        case "blue": blue = 0; break;
        case "yellow": yellow = 0; break;
    }
    switch (ds_list_find_value(tempList, 1))
    {
        case "red": red = 2; break;
        case "green": green = 2; break;
        case "blue": blue = 2; break;
        case "yellow": yellow = 2; break;
    }
    ds_list_clear(tempList)
}
fireRate = 1
damage = 1
secondaryDamage = global.hardcore
pierce = 1
bounce = 1
ammo = 1

if global.difficulty != "master"
{
    ds_list_add(tempList, "Fire Rate")
    ds_list_add(tempList, "Damage")
    if global.hardcore
        ds_list_add(tempList, "Secondary Damage")
    ds_list_add(tempList, "Pierce")
    ds_list_add(tempList, "Bounce")
    ds_list_add(tempList, "Ammo")
    ds_list_shuffle(tempList)

    switch (ds_list_find_value(tempList, 0))
    {
        case "Fire Rate": fireRate = 0; break;
        case "Damage": damage = 0; break;
        case "Secondary Damage": secondaryDamage = 0; break;
        case "Pierce": pierce = 0; break;
        case "Bounce": bounce = 0; break;
        case "Ammo": ammo = 0; break;
    }
}

ii = 2
if global.difficulty = "master"
    ii = 3

//Fire Rate
if fireRate = 1
{
    repeat(green * 2)
        ds_list_add(global.weaponLoot, "Green Fire Rate")
    repeat(blue * 2)
        ds_list_add(global.weaponLoot, "Blue Fire Rate")
    repeat(yellow * 2)
        ds_list_add(global.weaponLoot, "Yellow Fire Rate")
}
//Damage
if damage = 1
{
    repeat(green * 2)
        ds_list_add(global.weaponLoot, "Green Damage")
    repeat(red * 2)
        ds_list_add(global.weaponLoot, "Red Damage")
    repeat(yellow * 2)
        ds_list_add(global.weaponLoot, "Yellow Damage")
}

//Secondary Damage
if secondaryDamage = 1 and global.hardcore
{
    repeat(green * 2)
        ds_list_add(global.weaponLoot, "Green Alt Damage")
    repeat(red * 2)
        ds_list_add(global.weaponLoot, "Red Alt Damage")
    repeat(yellow * 2)
        ds_list_add(global.weaponLoot, "Yellow Alt Damage")
    repeat(blue * 2)
        ds_list_add(global.weaponLoot, "Blue Alt Damage")
}

//Pierce
if pierce = 1
{
    repeat(blue * ii)
        ds_list_add(global.weaponLoot, "Blue Pierce")
    repeat(red * ii)
        ds_list_add(global.weaponLoot, "Red Pierce")
    repeat(yellow * ii)
        ds_list_add(global.weaponLoot, "Yellow Pierce")
}
//Bounce
if bounce = 1
{
    repeat(blue * ii)
        ds_list_add(global.weaponLoot, "Blue Bounce")
    repeat(red * ii)
        ds_list_add(global.weaponLoot, "Red Bounce")
    repeat(green * ii)
        ds_list_add(global.weaponLoot, "Green Bounce")
}
//Ammo
if ammo = 1
{
    repeat(green * 2)
        ds_list_add(global.weaponLoot, "Green Ammo")
    repeat(blue * 2)
        ds_list_add(global.weaponLoot, "Blue Ammo")
    repeat(red * 2)
        ds_list_add(global.weaponLoot, "Red Ammo")
    repeat(yellow * 2)
        ds_list_add(global.weaponLoot, "Yellow Ammo")
}

if red &gt; 0
{
    ds_list_add(global.minorLoot, "Red Radius")
    ds_list_add(global.majorLoot, "Red Jump")
}

if green &gt; 0
{
    ds_list_add(global.minorLoot, "Green Wall Pierce")
    ds_list_add(global.majorLoot, "Green Burst")
}

if blue &gt; 0
{
    ds_list_add(global.minorLoot, "Blue Halt")
    ds_list_add(global.majorLoot, "Blue Cross")
}

if yellow &gt; 0
{
    ds_list_add(global.minorLoot, "Yellow Seven")
    ds_list_add(global.majorLoot, "Yellow Narrow")
}

ds_list_destroy(tempList)




















</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.enemySlow &gt; 0
    global.enemySlow -= 1

if instance_exists(obj_camera)
{
    x = obj_camera.x
    y = obj_camera.y
}

if global.gameMode = "pvp"
{
    if !instance_exists(obj_player1)
    {
        if p1Time &lt;= 0
        {
            if instance_exists(obj_player2)
                spawner = instance_furthest(obj_player2.x, obj_player2.y, obj_baddie_spawner)
            else
                spawner = instance_find(obj_baddie_spawner, irandom(instance_number(obj_baddie_spawner) - 1))

            instance_create(spawner.x, spawner.y, obj_player1)
        }
    
        p1Time -= 1
    }
    
    if !instance_exists(obj_player2)
    {
        if p2Time &lt;= 0
        {
            if instance_exists(obj_player1)
                spawner = instance_furthest(obj_player1.x, obj_player1.y, obj_baddie_spawner)
            else
                spawner = instance_find(obj_baddie_spawner, irandom(instance_number(obj_baddie_spawner) - 1))

            instance_create(spawner.x, spawner.y, obj_player2)
        }
    
        p2Time -= 1
    }
    
    if !instance_exists(obj_pvp_countdown)
    {
        seconds += 1
        
        if seconds &gt;= sec * 60
        {
            seconds = 0
            minutes += 1
            
            if minutes = 1 or minutes = 3
             with obj_mp_item
                instance_create(x, y, obj_mp_minor)
            
            if minutes = 2
            {  
                itemList = ds_list_create()
                ds_list_add(itemList, obj_mp_weaponMinor)
                ds_list_add(itemList, obj_mp_weaponMajor)
                //ds_list_shuffle(itemList)
                
                with obj_mp_item
                {
                    item = ds_list_find_value(other.itemList, 0)
                    ds_list_delete(other.itemList, 0)
                    
                    instance_create(x, y, item)
                }
                
                ds_list_destroy(itemList)
            }
            
        }
        
        if minutes = timeEnd
            instance_destroy(obj_player_parent)
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_menu)
if instance_exists(obj_player1)
    instance_destroy(obj_player1)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
